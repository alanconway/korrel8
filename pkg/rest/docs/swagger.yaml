basePath: /api/v1alpha1
consumes:
- application/json
definitions:
  Classes:
    additionalProperties:
      type: string
    description: Classes is a map from class names to a short description.
    type: object
  Constraint:
    description: Constraint constrains the objects that will be included in search
      results.
    properties:
      end:
        description: End of time interval to include.
        type: string
      limit:
        description: Limit number of objects returned per query.
        type: integer
      start:
        description: Start of time interval to include.
        type: string
    type: object
  Domain:
    description: Domain configuration information.
    properties:
      name:
        description: Name of the domain.
        type: string
      stores:
        description: Stores configured for the domain.
        items:
          $ref: '#/definitions/Store'
        type: array
    type: object
  Edge:
    description: Directed edge in the result graph, from Start to Goal classes.
    properties:
      goal:
        description: Goal is the class name of the goal node.
        example: domain:class
        type: string
      rules:
        description: Rules is the set of rules followed along this edge.
        items:
          $ref: '#/definitions/Rule'
        type: array
        x-omitempty: true
      start:
        description: Start is the class name of the start node.
        type: string
    type: object
  Goals:
    description: Starting point for a goals search.
    properties:
      goals:
        description: Goal classes for correlation.
        example:
        - domain:class
        items:
          type: string
        type: array
      start:
        $ref: '#/definitions/Start'
    type: object
  Graph:
    description: Graph resulting from a correlation search.
    properties:
      edges:
        items:
          $ref: '#/definitions/Edge'
        type: array
      nodes:
        items:
          $ref: '#/definitions/Node'
        type: array
    type: object
  Neighbours:
    description: Starting point for a neighbours search.
    properties:
      depth:
        description: Max depth of neighbours graph.
        type: integer
      start:
        $ref: '#/definitions/Start'
    type: object
  Node:
    properties:
      class:
        description: Class is the full class name in "DOMAIN:CLASS" form.
        example: domain:class
        type: string
      count:
        description: Count of results found for this class, after de-duplication.
        type: integer
      queries:
        description: Queries yielding results for this class.
        items:
          $ref: '#/definitions/QueryCount'
        type: array
    type: object
  QueryCount:
    description: Query run during a correlation with a count of results found.
    properties:
      count:
        description: Count of results or -1 if the query was not executed.
        type: integer
      query:
        description: Query for correlation data.
        type: string
    type: object
  Rule:
    properties:
      name:
        description: Name is an optional descriptive name.
        type: string
      queries:
        description: Queries generated while following this rule.
        items:
          $ref: '#/definitions/QueryCount'
        type: array
    type: object
  Start:
    description: Start identifies a set of starting objects for correlation.
    properties:
      class:
        description: Class for `objects`
        type: string
      constraint:
        $ref: '#/definitions/Constraint'
      objects:
        description: Objects of `class` serialized as JSON
        type: object
      queries:
        description: Queries for starting objects
        items:
          type: string
        type: array
    type: object
  Store:
    additionalProperties:
      type: string
    description: Store is a map of name:value attributes used to connect to a store.
    type: object
host: localhost:8080
info:
  contact:
    name: Project Korrel8r
    url: https://github.com/korrel8r/korrel8r
  description: REST API for the Korrel8r correlation engine.
  license:
    name: Apache 2.0
    url: https://github.com/korrel8r/korrel8r/blob/main/LICENSE
  title: REST API
  version: v1alpha1
paths:
  /domains:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Domain'
            type: array
        default:
          description: ""
          schema:
            type: object
      summary: Get name, configuration and status for each domain.
  /domains/{domain}/classes:
    get:
      parameters:
      - description: Domain name
        in: path
        name: domain
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Classes'
        default:
          description: ""
          schema:
            type: object
      summary: Get class names and descriptions for a domain.
  /graphs/goals:
    post:
      parameters:
      - description: include rules in graph edges
        in: query
        name: rules
        type: boolean
      - description: search from start to goal classes
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Goals'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Graph'
        default:
          description: ""
          schema:
            type: object
      summary: Create a correlation graph from start objects to goal queries.
  /graphs/neighbours:
    post:
      parameters:
      - description: include rules in graph edges
        in: query
        name: rules
        type: boolean
      - description: search from neighbours
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Neighbours'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Graph'
        default:
          description: ""
          schema:
            type: object
      summary: Create a neighbourhood graph around a start object to a given depth.
  /lists/goals:
    post:
      parameters:
      - description: search from start to goal classes
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Goals'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Node'
            type: array
        default:
          description: ""
          schema:
            type: object
      summary: Create a list of goal nodes related to a starting point.
  /objects:
    get:
      parameters:
      - description: query string
        in: query
        name: query
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              type: object
            type: array
        default:
          description: ""
          schema:
            type: object
      summary: Execute a query, returns a list of JSON objects.
produces:
- application/json
schemes:
- https
- http
swagger: "2.0"
