# Testing config file format only, not the current rules.
groups:
  - name: workloads
    domain: k8s
    classes:
      - Pod
      - Deployment.apps
      - DeploymentConfig.apps.openshift.io
      - StatefulSet.apps
      - Secret

  - name: networking
    domain: k8s
    classes:
      - Service
      - Route.route.openshift.io
      - Ingress.networking.k8s.io
      - NetworkPolicy.networking.k8s.io

  - name: storage
    domain: k8s
    classes:
      - PersistentVolumeClaim
      - PersistentVolume
      - StorageClass.storage.k8s.io
      - VolumeAttachment.storage.k8s.io

  - name: users
    domain: k8s
    classes:
      - ServiceAccount
      - Role.rbac.authorization.k8s.io
      - RoleBinding.rbac.authorization.k8s.io
      - ClusterRole.rbac.authorization.k8s.io
      - ClusterRoleBinding.rbac.authorization.k8s.io

  - name: all
    domain: k8s
    classes: [workloads, networking, storage, users]

  - name: selectors
    domain: k8s
    classes:
      - PersistentVolumeClaim
      - ReplicationController
      - Service
      - DaemonSet.apps
      - Deployment.apps
      - ReplicaSet.apps
      - StatefulSet.apps
      - DeploymentConfig.apps.openshift.io
      - Job.batch
      - PodDisruptionBudget.policy

  - name: namespacedResources
    domain: k8s
    classes:
      - Pod
      - Deployment.apps
      - DeploymentConfig.apps.openshift.io
      - StatefulSet.apps
      - CronJob.batch
      - Job.batch
      - DaemonSet.apps
      - ReplicaSet.apps
      - ReplicationController
      - PersistentVolumeClaim
      - Service
      - Route.route.openshift.io
      - Ingress.networking.k8s.io

rules:
   - name: SelectorToLogs
     start:
       domain: k8s
       classes: [selectors]
     goal:
       domain: log
     result:
       query: |-
         {
           "LogType": "{{ k8sLogType .Namespace }}",
           "LogQL": "{kubernetes_namespace_name=\"{{.Namespace}}\"} | json
             {{- range $k, $v := .Spec.Selector.MatchLabels}} | kubernetes_labels_{{lokiFixLabel $k}}=\"{{$v}}\"{{end -}}"
         }
   - name: PodToLogs
     start:
       domain: k8s
       classes: [Pod]
     goal:
       domain: log
     result:
       query: |-
         {
           "LogType": "{{ k8sLogType .Namespace }}",
           "LogQL": "{kubernetes_namespace_name=\"{{.Namespace}}\",kubernetes_pod_name=\"{{.Name}}\"} | json"
         }

   - name: NamespaceToResource
     start:
       domain: k8s
       classes: [Namespace]
     goal:
       domain: k8s
       classes: [namespacedResources]
     result:
       query: |-
         {{$goal := rule.Goal}}
         {Namespace: {{.Name}}, Group: {{$goal.Group}}, Version: {{$goal.Version}}, Kind: {{$goal.Kind}} }

   - name: NamespaceToAlert
     start:
       domain: k8s
       classes: [Namespace]
     goal:
       domain: alert
     result:
       query: |-
         {
           "Labels":
           {
             "namespace": "{{.Name}}"
           }
         }

   - name: PodToAlert
     start:
       domain: k8s
       classes: [Pod]
     goal:
       domain: alert
     result:
       query: |-
         {
           "Labels":
           {
             "namespace": "{{.Namespace}}",
             "pod": "{{.Name}}"
           }
         }

